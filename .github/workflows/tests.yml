# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Run various tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    container:
      image: registry.access.redhat.com/ubi9/ubi

    steps:
    - uses: actions/checkout@v3
    - name: Set up CPython
      run: |
        dnf install --assumeyes python3-pip
    - name: Install dependencies
      run: |
        pip3 install flake8
        pip3 install pipreqs
        pip3 install mypy

    - name: Run pipreqs
      run: |
        pipreqs --force

    - name: Commit changes
      run: |
        if git diff --name-only | grep 'requirements.txt' > /dev/null; then
            echo 'requirements.txt updated'
        fi

        if [[ -f requirements.txt && -s requirements.txt ]] ; then
          echo 'requirements.txt is not empty'
        else
          echo 'requirements.txt is empty'
          requirements.txt
          echo 'requirements.txt removed'
        fi

        if [[ "$(git ls-files . --exclude-standard --others)" == "requirements.txt" ]]; then
          echo 'changes detected'
          git config --global user.name 'Levi V'
          git config --global user.email 'levi@redhat.com'
          git add requirements.txt
          git commit -m "Automated update to the requirements.txt"
          git push
          echo 'changes commited'
        fi

    - name: Install requirements.txt
      run: |
        if [ -f requirements.txt ]; then pip3 install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check for type errors
      run: |
        export MYPYPATH=.:src
        mypy src/enki.py --ignore-missing-imports

    - name: Run unittests
      run: |
        bash run_tests.sh
